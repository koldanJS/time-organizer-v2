name: CI-CD-Pipeline-to-AWS-ElasticBeastalk
env:
  EB_PACKAGE_S3_BUCKET_NAME: "koldanjs-time-organizer"
  EB_APPLICATION_NAME: "time-organizer"
  EB_ENVIRONMENT_NAME: "Timeorganizer-env"
  DEPLOY_PACKAGE_NAME: "time_organizer_${{ github.sha }}.zip"
  AWS_REGION_NAME: "eu-central-1"

on:
  push:
    branches:
      - master

jobs:
  ci_part:
    runs-on: ubuntu-20.04

    steps:
      - name: Git clone my repo
        uses: actions/checkout@v1
      
      - name: Create ZIP Deployment Package
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}
      
      - name: Copy Deployment Package to S3 Bucket
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/

      - name: Print Success Message for CI
        run: echo "CI Part Pipeline Finished Successfully!"

  cd_part:
    runs-on: ubuntu-20.04
    needs: [ci_part]

    steps:
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}
      
      - name: Create new ElasticBeanstalk Application Version
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLICATION_NAME }} \
          --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "${{ github.sha }}" \
          --description "CommitSHA-${{ github.sha }}"
      
      - name: Deploy new ElasticBeanstalk Application Version
        run: aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "${{ github.sha }}"

      - name: Print Success Message for CD
        run: echo "CD Part Pipeline Finished Successfully!"